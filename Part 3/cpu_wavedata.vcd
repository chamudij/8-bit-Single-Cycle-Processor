$date
	Tue Jan 25 16:23:45 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var reg 1 " CLK $end
$var reg 32 # INSTRUCTION [31:0] $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 " CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 1 & WRITEENABLE $end
$var wire 8 ' TWOSRESULT [7:0] $end
$var wire 8 ( REGOUT2 [7:0] $end
$var wire 8 ) REGOUT1 [7:0] $end
$var wire 32 * PCRESULT [31:0] $end
$var wire 8 + MUX2OUT [7:0] $end
$var wire 8 , MUX1OUT [7:0] $end
$var wire 1 - ISMINUS $end
$var wire 1 . ISIMM $end
$var wire 8 / ALURESULT [7:0] $end
$var wire 3 0 ALUOP [2:0] $end
$var reg 8 1 IMMEDIATE [7:0] $end
$var reg 8 2 OPCODE [7:0] $end
$var reg 32 3 PC [31:0] $end
$var reg 3 4 READREG1 [2:0] $end
$var reg 3 5 READREG2 [2:0] $end
$var reg 3 6 WRITEREG [2:0] $end
$scope module adder1 $end
$var wire 32 7 PCINPUT [31:0] $end
$var wire 32 8 PCNEXT [31:0] $end
$upscope $end
$scope module alu1 $end
$var wire 3 9 SELECT [2:0] $end
$var wire 8 : OR_RESULT [7:0] $end
$var wire 8 ; FORWARD_RESULT [7:0] $end
$var wire 8 < DATA2 [7:0] $end
$var wire 8 = DATA1 [7:0] $end
$var wire 8 > AND_RESULT [7:0] $end
$var wire 8 ? ADD_RESULT [7:0] $end
$var reg 8 @ RESULT [7:0] $end
$scope module myadd $end
$var wire 8 A OUT [7:0] $end
$var wire 8 B IN2 [7:0] $end
$var wire 8 C IN1 [7:0] $end
$upscope $end
$scope module myand $end
$var wire 8 D OUT [7:0] $end
$var wire 8 E IN2 [7:0] $end
$var wire 8 F IN1 [7:0] $end
$upscope $end
$scope module myforward $end
$var wire 8 G OUT [7:0] $end
$var wire 8 H IN [7:0] $end
$upscope $end
$scope module myor $end
$var wire 8 I OUT [7:0] $end
$var wire 8 J IN2 [7:0] $end
$var wire 8 K IN1 [7:0] $end
$upscope $end
$upscope $end
$scope module controlUnit1 $end
$var wire 8 L OP [7:0] $end
$var reg 3 M ALUOP [2:0] $end
$var reg 1 . ISIMM $end
$var reg 1 - ISMINUS $end
$var reg 1 & WRITEENABLE $end
$upscope $end
$scope module mux1twos $end
$var wire 1 - MUXSELECT $end
$var wire 8 N MUXIN2 [7:0] $end
$var wire 8 O MUXIN1 [7:0] $end
$var reg 8 P MUXOUT [7:0] $end
$upscope $end
$scope module mux2imm $end
$var wire 8 Q MUXIN1 [7:0] $end
$var wire 8 R MUXIN2 [7:0] $end
$var wire 1 . MUXSELECT $end
$var reg 8 S MUXOUT [7:0] $end
$upscope $end
$scope module regfile1 $end
$var wire 1 " CLK $end
$var wire 8 T IN [7:0] $end
$var wire 3 U INADDRESS [2:0] $end
$var wire 8 V OUT1 [7:0] $end
$var wire 3 W OUT1ADDRESS [2:0] $end
$var wire 8 X OUT2 [7:0] $end
$var wire 3 Y OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 & WRITE $end
$var integer 32 Z i [31:0] $end
$upscope $end
$scope module twosComp1 $end
$var wire 8 [ TWOSIN [7:0] $end
$var wire 8 \ TWOSOUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
x.
x-
bx ,
bx +
bx *
bx )
bx (
bx '
x&
bx %
1$
bx #
0"
bx !
$end
#4
1"
#5
b1000 Z
b0 !
b0 3
b0 7
#6
b100 *
b100 8
#7
b101 1
b101 R
b101 5
b101 Y
b0 4
b0 W
b100 6
b100 U
b0 2
b0 L
b1000000000000000101 #
b1000000000000000101 %
#8
b101 +
b101 <
b101 B
b101 E
b101 H
b101 J
b101 S
b0 0
b0 9
b0 M
1.
0-
1&
0"
0$
#9
b101 /
b101 @
b101 T
b0 ,
b0 P
b0 Q
bx1x1 :
bx1x1 I
b0x0x >
b0x0x D
b101 ;
b101 G
b0 (
b0 O
b0 X
b0 [
b0 )
b0 =
b0 C
b0 F
b0 K
b0 V
#10
b0 '
b0 N
b0 \
b101 :
b101 I
b0 >
b0 D
#11
b101 ?
b101 A
#12
1"
#13
b100 !
b100 3
b100 7
#14
b1000 *
b1000 8
#15
b1001 +
b1001 <
b1001 B
b1001 E
b1001 H
b1001 J
b1001 S
b1001 1
b1001 R
b1 5
b1 Y
b10 6
b10 U
b100000000000001001 #
b100000000000001001 %
#16
b1001 /
b1001 @
b1001 T
b1001 :
b1001 I
b1001 ;
b1001 G
0"
#17
b1001 ?
b1001 A
#20
1"
#21
b1000 !
b1000 3
b1000 7
#22
b1100 *
b1100 8
#23
b10 +
b10 <
b10 B
b10 E
b10 H
b10 J
b10 S
b10 1
b10 R
b10 5
b10 Y
b100 4
b100 W
b110 6
b110 U
b10 2
b10 L
b10000001100000010000000010 #
b10000001100000010000000010 %
#24
b0 +
b0 <
b0 B
b0 E
b0 H
b0 J
b0 S
b10 :
b10 I
b10 ;
b10 G
b1 0
b1 9
b1 M
0.
0"
#25
b1001 +
b1001 <
b1001 B
b1001 E
b1001 H
b1001 J
b1001 S
b1001 ,
b1001 P
b1001 Q
b0 :
b0 I
b0 ;
b0 G
b1001 (
b1001 O
b1001 X
b1001 [
b101 )
b101 =
b101 C
b101 F
b101 K
b101 V
#26
b1 >
b1 D
b1001 ;
b1001 G
b11110111 '
b11110111 N
b11110111 \
b1101 :
b1101 I
#27
b1110 /
b1110 @
b1110 T
b1110 ?
b1110 A
#28
1"
#29
b1100 !
b1100 3
b1100 7
#30
b10000 *
b10000 8
#31
b110 1
b110 R
b110 5
b110 Y
b0 4
b0 W
b0 6
b0 U
b1 2
b1 L
b1000000000000000000000110 #
b1000000000000000000000110 %
#32
b1001 /
b1001 @
b1001 T
b0 0
b0 9
b0 M
0"
#33
b1110 +
b1110 <
b1110 B
b1110 E
b1110 H
b1110 J
b1110 S
b1110 ,
b1110 P
b1110 Q
b1110 (
b1110 O
b1110 X
b1110 [
b0 )
b0 =
b0 C
b0 F
b0 K
b0 V
#34
b1110 /
b1110 @
b1110 T
b1110 ;
b1110 G
b11110010 '
b11110010 N
b11110010 \
b1110 :
b1110 I
b0 >
b0 D
#36
1"
#37
b10000 !
b10000 3
b10000 7
#38
b10100 *
b10100 8
#39
b1 1
b1 R
b1 5
b1 Y
b1 6
b1 U
b0 2
b0 L
b10000000000000001 #
b10000000000000001 %
b1110 )
b1110 =
b1110 C
b1110 F
b1110 K
b1110 V
#40
b1 +
b1 <
b1 B
b1 E
b1 H
b1 J
b1 S
1.
b1110 >
b1110 D
0"
#41
b1 /
b1 @
b1 T
b0 ,
b0 P
b0 Q
b1111 :
b1111 I
b0 >
b0 D
b1 ;
b1 G
b0 (
b0 O
b0 X
b0 [
#42
b0 '
b0 N
b0 \
b1111 ?
b1111 A
#44
1"
#45
b10100 !
b10100 3
b10100 7
#46
b11000 *
b11000 8
#47
b100 +
b100 <
b100 B
b100 E
b100 H
b100 J
b100 S
b100 1
b100 R
b100 5
b100 Y
b10 4
b10 W
b101 6
b101 U
b11 2
b11 L
b1 ,
b1 P
b1 Q
b11000001010000001000000100 #
b11000001010000001000000100 %
b1 (
b1 O
b1 X
b1 [
#48
b11111111 +
b11111111 <
b11111111 B
b11111111 E
b11111111 H
b11111111 J
b11111111 S
b1111 /
b1111 @
b1111 T
b11111111 ,
b11111111 P
b11111111 Q
b1110 :
b1110 I
b100 >
b100 D
b1 0
b1 9
b1 M
0.
1-
b100 ;
b100 G
b11111111 '
b11111111 N
b11111111 \
0"
#49
b11111111 :
b11111111 I
b1110 >
b1110 D
b11111111 ;
b11111111 G
b101 (
b101 O
b101 X
b101 [
b1001 )
b1001 =
b1001 C
b1001 F
b1001 K
b1001 V
#50
b11111011 +
b11111011 <
b11111011 B
b11111011 E
b11111011 H
b11111011 J
b11111011 S
b11111011 ,
b11111011 P
b11111011 Q
b11111011 '
b11111011 N
b11111011 \
b1001 >
b1001 D
#51
b11111011 :
b11111011 I
b11111011 ;
b11111011 G
#52
b100 /
b100 @
b100 T
b100 ?
b100 A
1"
#53
b11000 !
b11000 3
b11000 7
#54
b11100 *
b11100 8
#55
b110 1
b110 R
b110 5
b110 Y
b1 4
b1 W
b11 6
b11 U
b101 2
b101 L
b101000000110000000100000110 #
b101000000110000000100000110 %
#56
b101 +
b101 <
b101 B
b101 E
b101 H
b101 J
b101 S
b11111011 /
b11111011 @
b11111011 T
b101 ,
b101 P
b101 Q
b11 0
b11 9
b11 M
0-
0"
#57
b1110 +
b1110 <
b1110 B
b1110 E
b1110 H
b1110 J
b1110 S
b1101 /
b1101 @
b1101 T
b1110 ,
b1110 P
b1110 Q
b1101 :
b1101 I
b1 >
b1 D
b101 ;
b101 G
b1110 (
b1110 O
b1110 X
b1110 [
b1 )
b1 =
b1 C
b1 F
b1 K
b1 V
#58
b1111 /
b1111 @
b1111 T
b0 >
b0 D
b1110 ;
b1110 G
b11110010 '
b11110010 N
b11110010 \
b1111 :
b1111 I
#59
b1111 ?
b1111 A
#60
1"
#61
b11100 !
b11100 3
b11100 7
#62
b100000 *
b100000 8
#63
b0 1
b0 R
b0 5
b0 Y
b101 4
b101 W
b111 6
b111 U
b100 2
b100 L
b100000001110000010100000000 #
b100000001110000010100000000 %
#64
b0 /
b0 @
b0 T
b10 0
b10 9
b10 M
0"
#65
b100 )
b100 =
b100 C
b100 F
b100 K
b100 V
#66
b100 /
b100 @
b100 T
b1110 :
b1110 I
b100 >
b100 D
#67
b10010 ?
b10010 A
#68
1"
#69
b100000 !
b100000 3
b100000 7
#70
b100100 *
b100100 8
#71
bx 1
bx R
bx 5
bx Y
bx 4
bx W
bx 6
bx U
bx 2
bx L
bx #
bx %
#72
0"
#73
bx +
bx <
bx B
bx E
bx H
bx J
bx S
bx ,
bx P
bx Q
bx (
bx O
bx X
bx [
bx )
bx =
bx C
bx F
bx K
bx V
#74
bx /
bx @
bx T
bx ;
bx G
bx '
bx N
bx \
bx :
bx I
bx >
bx D
#75
bx ?
bx A
#76
1"
#77
b100100 !
b100100 3
b100100 7
#78
b101000 *
b101000 8
#80
0"
#84
1"
#85
b101000 !
b101000 3
b101000 7
#86
b101100 *
b101100 8
#88
0"
#92
1"
#93
b101100 !
b101100 3
b101100 7
#94
b110000 *
b110000 8
#96
0"
#100
1"
#101
b110000 !
b110000 3
b110000 7
#102
b110100 *
b110100 8
#104
0"
#108
1"
#109
b110100 !
b110100 3
b110100 7
#110
b111000 *
b111000 8
#112
0"
#116
1"
#117
b111000 !
b111000 3
b111000 7
#118
b111100 *
b111100 8
#120
0"
#124
1"
#125
b111100 !
b111100 3
b111100 7
#126
b1000000 *
b1000000 8
#128
0"
#132
1"
#133
b1000000 !
b1000000 3
b1000000 7
#134
b1000100 *
b1000100 8
#136
0"
#140
1"
#141
b1000100 !
b1000100 3
b1000100 7
#142
b1001000 *
b1001000 8
#144
0"
#148
1"
#149
b1001000 !
b1001000 3
b1001000 7
#150
b1001100 *
b1001100 8
#152
0"
#156
1"
#157
b1001100 !
b1001100 3
b1001100 7
#158
b1010000 *
b1010000 8
#160
0"
#164
1"
#165
b1010000 !
b1010000 3
b1010000 7
#166
b1010100 *
b1010100 8
#168
0"
#172
1"
#173
b1010100 !
b1010100 3
b1010100 7
#174
b1011000 *
b1011000 8
#176
0"
#180
1"
#181
b1011000 !
b1011000 3
b1011000 7
#182
b1011100 *
b1011100 8
#184
0"
#188
1"
#189
b1011100 !
b1011100 3
b1011100 7
#190
b1100000 *
b1100000 8
#192
0"
#196
1"
#197
b1100000 !
b1100000 3
b1100000 7
#198
b1100100 *
b1100100 8
#200
0"
#204
1"
#205
b1100100 !
b1100100 3
b1100100 7
#206
b1101000 *
b1101000 8
#208
0"
#212
1"
#213
b1101000 !
b1101000 3
b1101000 7
#214
b1101100 *
b1101100 8
#216
0"
#220
1"
#221
b1101100 !
b1101100 3
b1101100 7
#222
b1110000 *
b1110000 8
#224
0"
#228
1"
#229
b1110000 !
b1110000 3
b1110000 7
#230
b1110100 *
b1110100 8
#232
0"
#236
1"
#237
b1110100 !
b1110100 3
b1110100 7
#238
b1111000 *
b1111000 8
#240
0"
#244
1"
#245
b1111000 !
b1111000 3
b1111000 7
#246
b1111100 *
b1111100 8
#248
0"
#252
1"
#253
b1111100 !
b1111100 3
b1111100 7
#254
b10000000 *
b10000000 8
#256
0"
#260
1"
#261
b10000000 !
b10000000 3
b10000000 7
#262
b10000100 *
b10000100 8
#264
0"
#268
1"
#269
b10000100 !
b10000100 3
b10000100 7
#270
b10001000 *
b10001000 8
#272
0"
#276
1"
#277
b10001000 !
b10001000 3
b10001000 7
#278
b10001100 *
b10001100 8
#280
0"
#284
1"
#285
b10001100 !
b10001100 3
b10001100 7
#286
b10010000 *
b10010000 8
#288
0"
#292
1"
#293
b10010000 !
b10010000 3
b10010000 7
#294
b10010100 *
b10010100 8
#296
0"
#300
1"
#301
b10010100 !
b10010100 3
b10010100 7
#302
b10011000 *
b10011000 8
#304
0"
#308
1"
#309
b10011000 !
b10011000 3
b10011000 7
#310
b10011100 *
b10011100 8
#312
0"
#316
1"
#317
b10011100 !
b10011100 3
b10011100 7
#318
b10100000 *
b10100000 8
#320
0"
#324
1"
#325
b10100000 !
b10100000 3
b10100000 7
#326
b10100100 *
b10100100 8
#328
0"
#332
1"
#333
b10100100 !
b10100100 3
b10100100 7
#334
b10101000 *
b10101000 8
#336
0"
#340
1"
#341
b10101000 !
b10101000 3
b10101000 7
#342
b10101100 *
b10101100 8
#344
0"
#348
1"
#349
b10101100 !
b10101100 3
b10101100 7
#350
b10110000 *
b10110000 8
#352
0"
#356
1"
#357
b10110000 !
b10110000 3
b10110000 7
#358
b10110100 *
b10110100 8
#360
0"
#364
1"
#365
b10110100 !
b10110100 3
b10110100 7
#366
b10111000 *
b10111000 8
#368
0"
#372
1"
#373
b10111000 !
b10111000 3
b10111000 7
#374
b10111100 *
b10111100 8
#376
0"
#380
1"
#381
b10111100 !
b10111100 3
b10111100 7
#382
b11000000 *
b11000000 8
#384
0"
#388
1"
#389
b11000000 !
b11000000 3
b11000000 7
#390
b11000100 *
b11000100 8
#392
0"
#396
1"
#397
b11000100 !
b11000100 3
b11000100 7
#398
b11001000 *
b11001000 8
#400
0"
#404
1"
#405
b11001000 !
b11001000 3
b11001000 7
#406
b11001100 *
b11001100 8
#408
0"
#412
1"
#413
b11001100 !
b11001100 3
b11001100 7
#414
b11010000 *
b11010000 8
#416
0"
#420
1"
#421
b11010000 !
b11010000 3
b11010000 7
#422
b11010100 *
b11010100 8
#424
0"
#428
1"
#429
b11010100 !
b11010100 3
b11010100 7
#430
b11011000 *
b11011000 8
#432
0"
#436
1"
#437
b11011000 !
b11011000 3
b11011000 7
#438
b11011100 *
b11011100 8
#440
0"
#444
1"
#445
b11011100 !
b11011100 3
b11011100 7
#446
b11100000 *
b11100000 8
#448
0"
#452
1"
#453
b11100000 !
b11100000 3
b11100000 7
#454
b11100100 *
b11100100 8
#456
0"
#460
1"
#461
b11100100 !
b11100100 3
b11100100 7
#462
b11101000 *
b11101000 8
#464
0"
#468
1"
#469
b11101000 !
b11101000 3
b11101000 7
#470
b11101100 *
b11101100 8
#472
0"
#476
1"
#477
b11101100 !
b11101100 3
b11101100 7
#478
b11110000 *
b11110000 8
#480
0"
#484
1"
#485
b11110000 !
b11110000 3
b11110000 7
#486
b11110100 *
b11110100 8
#488
0"
#492
1"
#493
b11110100 !
b11110100 3
b11110100 7
#494
b11111000 *
b11111000 8
#496
0"
#500
1"
#501
b11111000 !
b11111000 3
b11111000 7
#502
b11111100 *
b11111100 8
#504
0"
#508
1"
